  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      SecurityGroups:
        - !Ref AlbSecurityGroup
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2



  HTTPlistener:
   Type: AWS::ElasticLoadBalancingV2::Listener
   Properties:
     DefaultActions:
       - Type: redirect
         RedirectConfig:
           Protocol: HTTPS
           Port: "443"
           Host: "#{host}"
           Path: "/#{path}"
           Query: "#{query}"
           StatusCode: HTTP_301
     LoadBalancerArn: !Ref ApplicationLoadBalancer
     Port: 80
     Protocol: HTTP

  HTTPSListener:
   Type: AWS::ElasticLoadBalancingV2::Listener
   Properties:
     DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
     LoadBalancerArn: !Ref ApplicationLoadBalancer
     Port: 443
     Protocol: HTTP

  TargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckPort: '443'
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: "200"
      Port: 443
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 4
      VpcId: !Sub "${Vpc}"
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '10'

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckPort: '443'
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: "200"
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 4
      VpcId: !Sub "${Vpc}"
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '10'


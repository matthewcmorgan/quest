AWSTemplateFormatVersion: '2010-09-09'
Description: Builds Pipeline for Stack
Parameters:
  GitHubToken:
    Description: Personal Access Token for authenticating to GitHub
    Type: String
    NoEcho: true
  GitHubRepositoryName:
    Type: String
    Default: quest
  GitHubOwner:
    Type: String
    Default: matthewcmorgan
  GitHubBranch:
    Type: String
    Default: mmorgan
  CodeBuildRoleArn:
    Type: String
  CodeBuildSecurityGroup:
    Type: String
  CodePipelineRoleArn:
    Type: String
  CodePipelineBucket:
    Type: String
  VpcId: 
    Type: String
  PrivateSubnetA:
    Type: String
  PrivateSubnetB:
    Type: String
  ExecutionRoleArn:
    Type: String
  TaskRoleArn:
    Type: String
  AutoScalingRoleArn:
    Type: String
  AlbSecurityGroup:
    Type: String
  ServiceName:
    Type: String
  ClusterName:
    Type: String
  ECSSecurityGroup:
    Type: String

Resources:

# Must be updated after creation to correct value (or passed on the cli as a parameter-override)
  GitHubTokenSecret:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: PAT for Github Access
      SecretString: !Sub '{"token":"${GitHubToken}"}'

  GitHubWebhook:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Join [':', ['{{resolve:secretsmanager', !Ref GitHubTokenSecret, 'SecretString:token}}']]
      RegisterWithThirdParty: true
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodeBuildProject:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ServiceName
      ServiceRole: !Ref CodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ServiceName}
        PrivilegedMode: true
      VpcConfig:
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroup
        Subnets:
          - !Sub "${PrivateSubnetA}"
          - !Sub "${PrivateSubnetB}"
        VpcId: !Sub "${VpcId}"
      Source:
        BuildSpec: CloudFormation/buildspec.yml
        Type: CODEPIPELINE
      TimeoutInMinutes: 15

  CodePipeline:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Location: !Ref CodePipelineBucket
        Type: S3
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepositoryName
                Branch: !Ref GitHubBranch
                OAuthToken: !Join [':', ['{{resolve:secretsmanager', !Ref GitHubTokenSecret, 'SecretString:token}}']]
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
                EnvironmentVariables: !Sub |
                  [
                    {"name": "COSIGN_KEY_ARN", "value": "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/${AWS::StackName}-key"}
                  ]
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildOutput
              RoleArn: !Ref CodeBuildRoleArn
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                StackName: !Sub ${AWS::StackName}-Service
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                TemplatePath: BuildOutput::CloudFormation/Service.yml
                RoleArn: !Ref CodePipelineRoleArn
                ParameterOverrides: !Sub |
                  {
                    "PrivateSubnetA": "${PrivateSubnetA}",
                    "PrivateSubnetB": "${PrivateSubnetB}",
                    "ExecutionRoleArn": "${ExecutionRoleArn}",
                    "TaskRoleArn": "${TaskRoleArn}",
                    "AutoScalingRoleArn": "${AutoScalingRoleArn}",
                    "AlbSecurityGroup": "${AlbSecurityGroup}",
                    "ClusterName": "${ClusterName}",
                    "ECSSecurityGroup": "${ECSSecurityGroup}",
                    "Image": { "Fn::GetParam" : ["BuildOutput", "imageDetail.json", "ImageURI"]},
                    "Tag": { "Fn::GetParam" : ["BuildOutput", "imageDetail.json", "Tag"]}
                  }
              InputArtifacts:
                - Name: BuildOutput
              RoleArn: !Ref CodePipelineRoleArn
              RunOrder: 1

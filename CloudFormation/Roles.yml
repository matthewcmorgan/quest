AWSTemplateFormatVersion: '2010-09-09'
Description: Builds Roles for Stack
Parameters:
  CodePipelineS3Bucket:
    Type: String  

Resources:
  AutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - autoscaling.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ecs-autoscaling-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:GetMetricStatistics
                  - cloudwatch:PutMetricAlarm
                Resource: '*'

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ecs-task-execution-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - ecr:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: ecs-tasks-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForResource
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
              AWS: !GetAtt CodePipelineRole.Arn
            Action: sts:AssumeRole
        Version: '2012-10-17'
      ManagedPolicyArns:
        # More than necessary
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess
      Policies:
        - PolicyName: CodeBuildServiceRole 
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
            - Sid: CloudWatchLogsPolicy
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"
            - Sid: S3GetObjectPolicy
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectVersion
              Resource: "*"
            - Sid: S3PutObjectPolicy
              Effect: Allow
              Action:
                - s3:PutObject
              Resource: "*"
            - Sid: S3BucketIdentity
              Effect: Allow
              Action:
                - s3:GetBucketAcl
                - s3:GetBucketLocation
              Resource: "*"
            - Sid: ECRIdentity
              Effect: Allow
              Action:
                - ecr:*
              Resource: "*"
        - PolicyName: pass-ecs-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource:
                  - !GetAtt ExecutionRole.Arn
                  - !GetAtt TaskRole.Arn
        - PolicyName: ecs-tasks
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecs:RunTask"
                Resource:
                  - "*"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
              AWS:
                - !Sub ${AWS::AccountId}
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodePipelineServiceRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${CodePipelineS3Bucket}/*
                  - !Sub arn:${AWS::Partition}:s3:::${CodePipelineS3Bucket}
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub arn:${AWS::Partition}:s3:::${CodePipelineS3Bucket}/*
              - Effect: Allow
                Action:
                  - codebuild:*
                  - cloudformation:*
                  - codepipeline:*
                  - iam:PassRole
                  - ecs:*
                  - ecr:*
                  - application-autoscaling:*
                  - cloudwatch:*
                Resource: '*'

Outputs:
  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildRole.Arn
  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
  ExecutionRoleArn:
    Value: !GetAtt ExecutionRole.Arn
  TaskRoleArn:
    Value: !GetAtt TaskRole.Arn
  AutoScalingRoleArn:
    Value: !GetAtt AutoScalingRole.Arn

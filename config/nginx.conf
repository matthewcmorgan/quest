events {
      use           epoll;
      worker_connections  128;
}
http {
  server {
      ssl_certificate nginx.crt;
      ssl_certificate_key nginx.key;
      ssl_dhparam dhparam.pem;
      ########################################################################
      # from https://cipherli.st/                                            #
      # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
      ########################################################################
      ssl_protocols TLSv1.3;# Requires nginx >= 1.13.0 else use TLSv1.2
      ssl_prefer_server_ciphers on;
      ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
      ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
      ssl_session_timeout  10m;
      ssl_session_cache shared:SSL:10m;
      ssl_session_tickets off; # Requires nginx >= 1.5.9
      # OCSP stapling requires the ability to revoke a cert
      # the issuer of a self-signed cert is the cert
      # and therefore cannot be revoked.
      # Use a real cert and enable this.
      ssl_stapling off; # Requires nginx >= 1.3.7
      ssl_stapling_verify off; # Requires nginx => 1.3.7
      resolver 8.8.8.8 1.1.1.1 valid=300s; # maybe use vpc resolver?
      resolver_timeout 5s;
      add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      ##################################
      # END https://cipherli.st/ BLOCK #
      ##################################
      listen       443 ssl;
      server_name  localhost;

      location / {
        proxy_pass http://app;
      }

      location /health {
        return 200;
      }

      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }
  }

  upstream app {
      server localhost:3000;
  }

  server {
      listen 80;
      server_name localhost;
      return 301 https://$server_name/$request_uri;
  }
}